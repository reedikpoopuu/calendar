{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","list","handleChange","contacts","map","contact","value","name","onChange","selected","AppointmentForm","title","setTitle","setContact","date","setDate","time","setTime","handleSubmit","getTodayString","Date","toLocaleDateString","split","month","day","year","padStart","onSubmit","type","aria-label","placeholder","event","e","target","min","Tile","file","f","Object","values","row","i","className","TileList","arr","AppointmentsPage","appointmentArr","addAppointment","useState","preventDefault","ContactForm","setName","phone","setPhone","email","setEmail","pattern","ContactsPage","addContact","duplicate","setDuplicate","useEffect","filter","length","alert","App","setContacts","appointments","setAppointments","ROUTES","to","activeClassName","exact","path","con_name","con_phoneNum","con_email","newContact","phoneNum","prev","app_title","app_contact","app_date","app_time","newAppointment","ReactDOM","render","document","getElementById"],"mappings":"iMAEaA,EAAgB,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,aAC7BC,EAAWF,EAAKG,KAAI,SAACC,GAC3B,OAAO,wBAA2BC,MAAOD,EAAQE,KAA1C,SAAiDF,EAAQE,MAA5CF,EAAQE,SAE5B,OACE,yBAAQC,SAAUN,EAAlB,UACE,wBAAQO,SAAS,WAAuBH,MAAM,SAAd,SAC/BH,MCNMO,EAAkB,SAAC,GAWzB,IAVLP,EAUI,EAVJA,SACAQ,EASI,EATJA,MACAC,EAQI,EARJA,SAEAC,GAMI,EAPJR,QAOI,EANJQ,YACAC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,QACAC,EACI,EADJA,aAEMC,EAAiB,WAAO,IAAD,GACA,IAAIC,MAC5BC,mBAAmB,SACnBC,MAAM,KAHkB,mBACpBC,EADoB,KACbC,EADa,KACRC,EADQ,KAI3B,MAAM,GAAN,OAAUA,EAAV,YAAkBF,EAAMG,SAAS,EAAG,KAApC,YAA4CF,EAAIE,SAAS,EAAG,OAG9D,OACE,uBAAMC,SAAUT,EAAhB,UACE,uBACIU,KAAK,OACLC,aAAW,mBACXC,YAAY,mBACZxB,MAAOK,EACPH,SAAU,SAACuB,GAAWnB,EAASmB,MAEnC,cAAC,EAAD,CAAe9B,KAAME,EAAUD,aAAc,SAAC8B,GAAOnB,EAAWmB,EAAEC,OAAO3B,UACzE,uBACIsB,KAAK,OACLE,YAAaX,EACbe,IAAKf,EACLb,MAAOQ,EACPN,SAAU,SAACuB,GAAWhB,EAAQgB,MAElC,uBACIH,KAAK,OACLC,aAAW,OACXvB,MAAOU,EACPR,SAAU,SAACuB,GAAWd,EAAQc,MAElC,gDC3COI,EAAO,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAGdC,EAFSC,OAAOC,OAAOH,GAEZhC,KAAI,SAACoC,EAAKC,GACzB,OAAO,IAAJA,EACI,mBAAGC,UAAU,aAAb,SAAqCF,GAANA,GAE/B,mBAAGE,UAAU,OAAb,SAA+BF,GAANA,MAIlC,OACE,qBAAKE,UAAU,iBAAf,SACGL,KCZMM,EAAW,SAAC,GAAW,IAC5B1C,EAD2B,EAAT2C,IACPxC,KAAI,SAACgC,GAAD,OAAU,cAAC,EAAD,CAAMA,KAAMA,OAC3C,OACE,8BACGnC,KCHM4C,EAAmB,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,eAAgB3C,EAA8B,EAA9BA,SAAU4C,EAAoB,EAApBA,eAAoB,EAKpDC,mBAAS,IAL2C,mBAKvErC,EALuE,KAKhEC,EALgE,OAUhDoC,mBAAS,IAVuC,mBAUvE3C,EAVuE,KAU9DQ,EAV8D,OAetDmC,mBAAS,IAf6C,mBAevElC,EAfuE,KAejEC,EAfiE,OAoBtDiC,mBAAS,IApB6C,mBAoBvEhC,EApBuE,KAoBjEC,EApBiE,KAsC9E,OACE,gCACE,oCACE,iDACA,cAAC,EAAD,CACAd,SAAUA,EACVQ,MAAOA,EACPC,SAvCc,SAACoB,GACpBpB,EAASoB,EAAEC,OAAO3B,QAuCbD,QAASA,EACTQ,WApCgB,SAACmB,GACtBnB,EAAWmB,IAoCNlB,KAAMA,EACNC,QAjCa,SAACiB,GACnBjB,EAAQiB,EAAEC,OAAO3B,QAiCZU,KAAMA,EACNC,QA9Ba,SAACe,GACnBf,EAAQe,EAAEC,OAAO3B,QA8BZY,aA3Be,SAACc,GACpBA,EAAEiB,iBAIFF,EAAepC,EAAON,EAASS,EAAME,GACrCJ,EAAS,IACTC,EAAW,IACXE,EAAQ,IACRE,EAAQ,UAqBN,uBACA,oCACE,8CACA,cAAC,EAAD,CAAU2B,IAAKE,WC5DVI,EAAc,SAAC,GAQrB,IAPL3C,EAOI,EAPJA,KACA4C,EAMI,EANJA,QACAC,EAKI,EALJA,MACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACArC,EACI,EADJA,aAEA,OACE,uBAAMS,SAAUT,EAAhB,UACM,uBACAU,KAAK,OACLC,aAAW,OACXC,YAAY,sBACZxB,MAAOC,EACPC,SAAU,SAACuB,GAAD,OAAWoB,EAAQpB,MAE7B,uBACAH,KAAK,OACLC,aAAW,eACXC,YAAY,8BACZ0B,QAAQ,YACRlD,MAAO8C,EACP5C,SAAU,SAACuB,GAAWsB,EAAStB,MAE/B,uBACAH,KAAK,QACLC,aAAW,SACXC,YAAY,SACZxB,MAAOgD,EACP9C,SAAU,SAACuB,GAAWwB,EAASxB,MAE/B,gDC/BG0B,EAAe,SAAC,GAA4B,IAA3BtD,EAA0B,EAA1BA,SAAUuD,EAAgB,EAAhBA,WAAgB,EAK/BV,mBAAS,IALsB,mBAKhDzC,EALgD,KAK1C4C,EAL0C,OAS7BH,mBAAS,IAToB,mBAShDI,EATgD,KASzCC,EATyC,OAa7BL,mBAAS,IAboB,mBAahDM,EAbgD,KAazCC,EAbyC,OAkBrBP,oBAAS,GAlBY,mBAkBhDW,EAlBgD,KAkBrCC,EAlBqC,KAmBvDC,qBAAU,WACTD,EAAazD,EAAS2D,QAAO,SAACzD,GAAD,OAAaA,EAAQE,OAASA,KAAMwD,UAChE,CAACxD,EAAMJ,IAmBR,OACE,gCACE,oCACE,6CACA,cAAC,EAAD,CACAI,KAAMA,EACN4C,QAxCY,SAACnB,GACnBmB,EAAQnB,EAAEC,OAAO3B,QAwCX8C,MAAOA,EACPC,SAtCa,SAACrB,GACpBqB,EAASrB,EAAEC,OAAO3B,QAsCZgD,MAAOA,EACPC,SApCa,SAACvB,GACpBuB,EAASvB,EAAEC,OAAO3B,QAoCZY,aA3Be,SAACc,GACpBA,EAAEiB,iBAKAU,EACFK,MAAM,0CAENN,EAAWnD,EAAM6C,EAAOE,GACxBH,EAAQ,IACRE,EAAS,IACTE,EAAS,WAkBP,uBACA,oCACE,0CACA,cAAC,EAAD,CAAUX,IAAKzC,WC2BR8D,MAnFf,WAAe,MAKmBjB,mBAAS,CACvC,CAACzC,KAAM,QACP6C,MAAO,WACPE,MAAO,oBARI,mBAKNnD,EALM,KAKI+D,EALJ,OAW2BlB,mBAAS,CAC/C,CAACrC,MAAO,UACRN,QAAS,QACTS,KAAM,aACNE,KAAM,WAfK,mBAWNmD,EAXM,KAWQC,EAXR,KAmBPC,EACM,YADNA,EAEU,gBA0BhB,OACE,qCACE,gCACE,cAAC,IAAD,CAASC,GAAID,EAAiBE,gBAAgB,SAA9C,sBAGA,cAAC,IAAD,CAASD,GAAID,EAAqBE,gBAAgB,SAAlD,6BAIF,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUH,GAAID,MAEhB,cAAC,IAAD,CAAOI,KAAMJ,EAAb,SAEE,cAAC,EAAD,CACAlE,SAAUA,EACVuD,WAtCS,SAACgB,EAAUC,EAAcC,GAC1C,IAAMC,EAAa,CACjBtE,KAAMmE,EACNI,SAAUH,EACVrB,MAAOsB,GAETV,GAAY,SAACa,GAAD,OAAWF,GAAX,mBAA0BE,YAmChC,cAAC,IAAD,CAAON,KAAMJ,EAAb,SAEE,cAAC,EAAD,CACAvB,eAAgBqB,EAChBhE,SAAUA,EACV4C,eArCV,SAAwBiC,EAAWC,EAAaC,EAAUC,GACxD,IAAMC,EAAiB,CACrBzE,MAAOqE,EACP3E,QAAS4E,EACTnE,KAAMoE,EACNlE,KAAMmE,GAERf,GAAgB,SAACW,GAAD,OAAWK,GAAX,mBAA8BL,qBC3ClDM,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5bd8a20b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({list, handleChange}) => {\r\n  const contacts = list.map((contact) => {\r\n  return <option key={contact.name} value={contact.name}>{contact.name}</option>\r\n  });\r\n  return (\r\n    <select onChange={handleChange} >\r\n      <option selected=\"selected\" key=\"empty\" value=\"empty\"></option>\r\n      {contacts}\r\n    </select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ContactPicker } from \"../contactPicker/ContactPicker\";\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n          type='text'\r\n          aria-label='Appointment Name'\r\n          placeholder='Appointment Name'\r\n          value={title}\r\n          onChange={(event) => {setTitle(event)}}\r\n      />\r\n      <ContactPicker list={contacts} handleChange={(e) => {setContact(e.target.value)}}/>\r\n      <input \r\n          type='date'\r\n          placeholder={getTodayString}\r\n          min={getTodayString}\r\n          value={date}\r\n          onChange={(event) => {setDate(event)}}\r\n      />\r\n      <input \r\n          type='time'\r\n          aria-label='Time'\r\n          value={time}\r\n          onChange={(event) => {setTime(event)}}\r\n      />\r\n      <button>Submit</button>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Tile = ({file}) => {\r\n  const values = Object.values(file);\r\n  \r\n  const f = values.map((row, i) => {\r\n    if(i===0){\r\n    return <p className=\"tile-title\" key={row}>{row}</p>\r\n  } else {\r\n    return <p className=\"tile\" key={row}>{row}</p>\r\n  };\r\n  })\r\n\r\n  return (\r\n    <div className=\"tile-container\">\r\n      {f}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Tile} from \"../tile/Tile\";\r\n\r\nexport const TileList = ({arr}) => {\r\n  const list = arr.map((file) => <Tile file={file} />)\r\n  return (\r\n    <div>\r\n      {list}\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\"\r\n\r\nexport const AppointmentsPage = ({appointmentArr, contacts, addAppointment}) => {\r\n  /*\r\n  Define state variables for \r\n  appointment info\r\n  */\r\n  const [title, setTitle] = useState('');\r\n  const handleTitle = (e) => {\r\n   setTitle(e.target.value);\r\n  }\r\n\r\n  const [contact, setContact] = useState('');\r\n  const handleContact = (e) => {\r\n   setContact(e);\r\n  }\r\n\r\n  const [date, setDate] = useState('');\r\n  const handleDate = (e) => {\r\n   setDate(e.target.value);\r\n  }\r\n\r\n  const [time, setTime] = useState('');\r\n  const handleTime = (e) => {\r\n   setTime(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data  \r\n    */\r\n    addAppointment(title, contact, date, time);\r\n    setTitle('');\r\n    setContact('');\r\n    setDate('');\r\n    setTime('');\r\n   \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm\r\n        contacts={contacts}\r\n        title={title}\r\n        setTitle={handleTitle}\r\n        contact={contact}\r\n        setContact={handleContact}\r\n        date={date}\r\n        setDate={handleDate}\r\n        time={time}\r\n        setTime={handleTime}\r\n        handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList arr={appointmentArr} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n          <input \r\n          type='text'\r\n          aria-label='Name'\r\n          placeholder='Name (letters only)'\r\n          value={name}\r\n          onChange={(event) => setName(event)}\r\n          />\r\n          <input \r\n          type='text'\r\n          aria-label='Phone Number'\r\n          placeholder='Phone Number (numbers only)'\r\n          pattern=\"[0-9]{7,}\"\r\n          value={phone}\r\n          onChange={(event) => {setPhone(event)}}\r\n          />\r\n          <input \r\n          type='email'\r\n          aria-label='E-mail'\r\n          placeholder='E-mail'\r\n          value={email}\r\n          onChange={(event) => {setEmail(event)}}\r\n          />\r\n          <button>Submit</button>\r\n        </form>\r\n  );\r\n};\r\n","import {useState, useEffect} from \"react\";\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\"\r\n\r\nexport const ContactsPage = ({contacts, addContact}) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n const [name, setName] = useState('');\r\n const handleName = (e) => {\r\n  setName(e.target.value);\r\n }\r\n const [phone, setPhone] = useState('');\r\n const handlePhone = (e) => {\r\n  setPhone(e.target.value);\r\n }\r\n const [email, setEmail] = useState('');\r\n const handleEmail = (e) => {\r\n  setEmail(e.target.value);\r\n }\r\n \r\n const [duplicate, setDuplicate] = useState(false);\r\n useEffect(() => {\r\n  setDuplicate(contacts.filter((contact) => contact.name === name).length);\r\n },[name, contacts])\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\r\n   if(duplicate) {\r\n    alert(\"Contact with the name already exists!\");\r\n   } else {\r\n    addContact(name, phone, email);\r\n    setName('');\r\n    setPhone('');\r\n    setEmail('');\r\n   }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2>\r\n        <ContactForm \r\n        name={name}\r\n        setName={handleName}\r\n        phone={phone}\r\n        setPhone={handlePhone}\r\n        email={email}\r\n        setEmail={handleEmail}\r\n        handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList arr={contacts} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n  const [contacts, setContacts] = useState([\r\n    {name: \"Allan\",\r\n    phone: \"55676899\",\r\n    email: \"raul@gmail.com\"\r\n  }\r\n  ]);\r\n  const [appointments, setAppointments] = useState([\r\n    {title: \"Meeting\",\r\n    contact: \"Allan\",\r\n    date: \"11/07/2022\",\r\n    time: \"11:36\"\r\n  }\r\n  ]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n  const addContact = (con_name, con_phoneNum, con_email) => {\r\n    const newContact = {\r\n      name: con_name,\r\n      phoneNum: con_phoneNum,\r\n      email: con_email\r\n    };\r\n    setContacts((prev) => [newContact, ...prev]);\r\n  }\r\n\r\n  function addAppointment(app_title, app_contact, app_date, app_time) {\r\n    const newAppointment = {\r\n      title: app_title,\r\n      contact: app_contact,\r\n      date: app_date,\r\n      time: app_time\r\n    }\r\n    setAppointments((prev) => [newAppointment, ...prev]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n             {/* Add props to ContactsPage */}\r\n            <ContactsPage \r\n            contacts={contacts}\r\n            addContact={addContact}\r\n            />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            {/* Add props to AppointmentsPage */}\r\n            <AppointmentsPage \r\n            appointmentArr={appointments}\r\n            contacts={contacts}\r\n            addAppointment={addAppointment}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}